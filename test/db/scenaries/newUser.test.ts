import { assert } from 'chai';
import { initBot } from 'src/app/bot/bot';
import { InfoRepository } from 'src/app/core/repositories/InfoRepository';
import { WeightRepository } from 'src/app/core/repositories/WeightRepository';
import { parseCommand } from 'src/shared/infrastructure/TelegramGateway';
import { createTestDB, InfoDbApi, WeightDbApi } from 'test/db/createTestDB';
import { TelegramMock } from 'test/TelegramMock';

const db = createTestDB();
const weightDbApi = new WeightDbApi(db);
const infoDbApi = new InfoDbApi(db);

describe('new user', () => {
  const telegram = new TelegramMock();
  const infoRepository = new InfoRepository(db);
  const weightRepository = new WeightRepository(db);
  const { weightCommandController, infoCommandController } = initBot(telegram, infoRepository, weightRepository, '');

  before(async () => {
    await weightDbApi.createTable();
    await infoDbApi.createTable();

    assert.strictEqual(telegram.handlers.size, 6);
    assert.strictEqual(telegram.handlers.get('w')?.length, 1);
    assert.strictEqual(telegram.handlers.get('weight')?.length, 1);
    assert.strictEqual(telegram.handlers.get('info')?.length, 1);
    assert.strictEqual(telegram.handlers.get('check')?.length, 1);
    assert.strictEqual(telegram.handlers.get('bmi')?.length, 1);
    assert.strictEqual(telegram.handlers.get('imt')?.length, 1);
  });

  after(async () => {
    await weightDbApi.dropTable();
    await infoDbApi.dropTable();
  });

  beforeEach(async () => {
    telegram.reset();
    await weightDbApi.truncateTable();
    await infoDbApi.truncateTable();
  });

  it('starts with /weight', async () => {
    function setHour(hour: number) {
      const date = new Date();
      date.setHours(hour);
      return date;
    }
    const morning = setHour(10);
    const evening = setHour(20);

    // –Ω–∞—á–∞–ª—å–Ω—ã–π –≤–≤–æ–¥ –≤–µ—Å–∞
    await shouldSend(
      '/weight',
      '–í–ø–µ—Ä–≤—ã–µ —É –º–µ–Ω—è? –í—Å—Ç–∞–Ω—å –Ω–∞ –≤–µ—Å—ã –∏ –≤–∑–≤–µ—Å—å—Å—è. –ó–∞—Ç–µ–º –¥–æ–±–∞–≤—å –≤–µ—Å –∫–æ–º–∞–Ω–¥–æ–π, –Ω–∞–ø—Ä–∏–º–µ—Ä:\n\n/weight 88.41',
      morning
    );
    await shouldSend('/weight 0', '–ö–∞–∫–æ–π-–∫–∞–∫–æ–π —É —Ç–µ–±—è –≤–µ—Å?', morning);
    await shouldSend(
      '/w 55,2',
      '–¢–≤–æ–π –≤–µ—Å: 55.2 –∫–≥.\n\n–ü–µ—Ä–≤—ã–π —à–∞–≥ —Å–¥–µ–ª–∞–Ω. –†–µ–≥—É–ª—è—Ä–Ω–æ –¥–µ–ª–∞–π –∑–∞–º–µ—Ä—ã, –Ω–∞–ø—Ä–∏–º–µ—Ä, –∫–∞–∂–¥—É—é –ø—è—Ç–Ω–∏—Ü—É —É—Ç—Ä–æ–º.\n\n–î–ª—è —Ä–∞—Å—á–µ—Ç–∞ –ò–ú–¢ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –¥–∞–Ω–Ω—ã—Ö. –£–∫–∞–∂–∏ –∏—Ö –ø—Ä–∏ –ø–æ–º–æ—â–∏ /info',
      morning
    );

    // —É–∫–∞–∑–∞–Ω–∏–µ —Å–≤–æ–∏—Ö –¥–∞–Ω–Ω—ã—Ö
    await shouldSend(
      '/info',
      '–£–∫–∞–∂–∏ —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –∫–æ–º–∞–Ω–¥–æ–π: /info –ø–æ–ª —Ä–æ—Å—Ç, –≥–¥–µ:\n‚Ä¢ –ø–æ–ª ‚Äî –º –∏–ª–∏ –∂\n‚Ä¢ —Ä–æ—Å—Ç –≤ —Å–º ‚Äî 185\n\n–ü—Ä–∏–º–µ—Ä: /info –∂ 164',
      morning
    );
    await shouldSend('/info –≥', '–ù–µ –º–æ–≥—É —Ä–∞–∑–æ–±—Ä–∞—Ç—å —Ç–≤–æ–∏ –∫–∞—Ä–∞–∫—É–ª–∏. –ü–∏—à–∏ —Ç–æ—á–Ω–æ –∫–∞–∫ —è —É–∫–∞–∑–∞–ª');
    await shouldSend(
      '/info –º 171',
      '–°–æ—Ö—Ä–∞–Ω–∏–ª —Ç–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ: –º—É–∂—á–∏–Ω–∞, 171 —Å–º.\n\n–ò–ú–¢: 18.77 ‚Äî —É —Ç–µ–±—è –Ω–µ–æ–ø–∞—Å–Ω—ã–π –¥–µ—Ñ–∏—Ü–∏—Ç –≤–µ—Å–∞. –¢–µ–±–µ –Ω—É–∂–Ω–æ –Ω–∞–±—Ä–∞—Ç—å 4 –∫–≥ –¥–æ –∑–¥–æ—Ä–æ–≤–æ–≥–æ –≤–µ—Å–∞, –∫–æ—Ç–æ—Ä—ã–π –¥–ª—è —Ç–µ–±—è –æ—Ç 58.83 –¥–æ 73.5 –∫–≥. –ê —Ç–≤–æ–π –∏–¥–µ–∞–ª—å–Ω—ã–π –≤–µ—Å: 66 –∫–≥ (63‚Äì68).',
      morning
    );
    await shouldSend('/info', '–ú—É–∂—á–∏–Ω–∞, 171 —Å–º', morning);

    // –µ—â–µ —Ä–∞–∑ –ø—Ä–æ–≤–µ—Ä–∏–ª –≤–µ—Å
    await shouldSend(
      '/weight',
      '–¢–≤–æ–π –≤–µ—Å: 55.2 –∫–≥.\n\n–†–µ–≥—É–ª—è—Ä–Ω–æ –¥–µ–ª–∞–π –∑–∞–º–µ—Ä—ã, –Ω–∞–ø—Ä–∏–º–µ—Ä, –∫–∞–∂–¥—É—é –ø—è—Ç–Ω–∏—Ü—É —É—Ç—Ä–æ–º.\n\n–ò–ú–¢: 18.77 ‚Äî —É —Ç–µ–±—è –Ω–µ–æ–ø–∞—Å–Ω—ã–π –¥–µ—Ñ–∏—Ü–∏—Ç –≤–µ—Å–∞. –¢–µ–±–µ –Ω—É–∂–Ω–æ –Ω–∞–±—Ä–∞—Ç—å 4 –∫–≥ –¥–æ –∑–¥–æ—Ä–æ–≤–æ–≥–æ –≤–µ—Å–∞, –∫–æ—Ç–æ—Ä—ã–π –¥–ª—è —Ç–µ–±—è –æ—Ç 58.83 –¥–æ 73.5 –∫–≥. –ê —Ç–≤–æ–π –∏–¥–µ–∞–ª—å–Ω—ã–π –≤–µ—Å: 66 –∫–≥ (63‚Äì68).',
      morning
    );

    // —É–∫–∞–∑–∞–ª –Ω–æ–≤—ã–π
    await shouldSend(
      '/weight 55.8',
      '–¢–≤–æ–π –≤–µ—Å: 55.8 –∫–≥.\n\n‚Ä¢ –°–µ–≥–æ–¥–Ω—è —Ä–∞–Ω–µ–µ: 55.2 (+0.60)\n\n–ò–ú–¢: 18.97 ‚Äî —É —Ç–µ–±—è –Ω–µ–æ–ø–∞—Å–Ω—ã–π –¥–µ—Ñ–∏—Ü–∏—Ç –≤–µ—Å–∞. –¢–µ–±–µ –Ω—É–∂–Ω–æ –Ω–∞–±—Ä–∞—Ç—å 4 –∫–≥ –¥–æ –∑–¥–æ—Ä–æ–≤–æ–≥–æ –≤–µ—Å–∞, –∫–æ—Ç–æ—Ä—ã–π –¥–ª—è —Ç–µ–±—è –æ—Ç 58.83 –¥–æ 73.5 –∫–≥. –ê —Ç–≤–æ–π –∏–¥–µ–∞–ª—å–Ω—ã–π –≤–µ—Å: 66 –∫–≥ (63‚Äì68).',
      evening
    );
  });

  it('starts with /info', async () => {
    await shouldSend('/info –∂ 165', '–°–æ—Ö—Ä–∞–Ω–∏–ª —Ç–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ: –∂–µ–Ω—â–∏–Ω–∞, 165 —Å–º.\n\n–¢–µ–ø–µ—Ä—å –Ω—É–∂–Ω–æ –≤–∑–≤–µ—Å–∏—Ç—å—Å—è: /weight 50');

    await shouldSend(
      '/weight 54',
      '–¢–≤–æ–π –≤–µ—Å: 54 –∫–≥.\n\n–ü–µ—Ä–≤—ã–π —à–∞–≥ —Å–¥–µ–ª–∞–Ω. –†–µ–≥—É–ª—è—Ä–Ω–æ –¥–µ–ª–∞–π –∑–∞–º–µ—Ä—ã, –Ω–∞–ø—Ä–∏–º–µ—Ä, –∫–∞–∂–¥—É—é –ø—è—Ç–Ω–∏—Ü—É —É—Ç—Ä–æ–º.\n\n–ò–ú–¢: 20.07 ‚Äî —É —Ç–µ–±—è –∑–¥–æ—Ä–æ–≤—ã–π –≤–µ—Å üí™. –¢–≤–æ—è –≥—Ä–∞–Ω–∏—Ü–∞ –∑–¥–æ—Ä–æ–≤–æ–≥–æ –≤–µ—Å–∞: –æ—Ç 51.11 –¥–æ 64.54 –∫–≥. –ê —Ç–≤–æ–π –∏–¥–µ–∞–ª—å–Ω—ã–π –≤–µ—Å: 58 –∫–≥ (54‚Äì62).'
    );

    await shouldSend('/info', '–ñ–µ–Ω—â–∏–Ω–∞, 165 —Å–º');
  });

  async function shouldSend(userText: string, botAnswer: string, date: Date = new Date()) {
    await userSend(userText, date);
    assert.strictEqual(telegram.lastSendMessageText, botAnswer, userText);
  }

  async function userSend(text: string, date = new Date()) {
    const command = parseCommand(telegram.createMsg({ text, date }));
    assert(command != null);

    switch (text.split(' ')[0]) {
      case '/w':
      case '/weight':
        return weightCommandController.handleWeight(command);
      case '/info':
        return infoCommandController.handleInfo(command);
      default:
        throw Error(`Not found command: "${text}"`);
    }
  }
});
