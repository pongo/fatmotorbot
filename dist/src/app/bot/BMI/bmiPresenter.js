"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const slonik_1 = require("slonik");
function bmiPresenter(result) {
    if (result.isErr)
        return presentError(result.error);
    return presentBMI(result.value);
}
exports.bmiPresenter = bmiPresenter;
function presentError(error) {
    if (error instanceof slonik_1.SlonikError)
        return '–ò–ú–¢: <i>–æ—à–∏–±–∫–∞ –≤ –±–¥</i>';
    return '–ò–ú–¢: –û—à–∏–±–æ—á–Ω–∞—è –æ—à–∏–±–∫–∞';
}
const interpretCategory = {
    'Very severely underweight': '—É —Ç–µ–±—è –≤—ã—Ä–∞–∂–µ–Ω–Ω—ã–π –¥–µ—Ñ–∏—Ü–∏—Ç –≤–µ—Å–∞, —Å–∫–æ—Ä–µ–µ –∫–æ –≤—Ä–∞—á—É!',
    'Severely underweight': '—É —Ç–µ–±—è –¥–µ—Ñ–∏—Ü–∏—Ç –≤–µ—Å–∞.',
    Underweight: '—É —Ç–µ–±—è –Ω–µ–æ–ø–∞—Å–Ω—ã–π –¥–µ—Ñ–∏—Ü–∏—Ç –≤–µ—Å–∞.',
    Normal: '—É —Ç–µ–±—è –∑–¥–æ—Ä–æ–≤—ã–π –≤–µ—Å üí™.',
    Overweight: '—É —Ç–µ–±—è –∏–∑–±—ã—Ç–æ—á–Ω—ã–π –≤–µ—Å.',
    'Obese I': '—É —Ç–µ–±—è –æ–∂–∏—Ä–µ–Ω–∏–µ I —Å—Ç–µ–ø–µ–Ω–∏.',
    'Obese II': '—É —Ç–µ–±—è –æ–∂–∏—Ä–µ–Ω–∏–µ II —Å—Ç–µ–ø–µ–Ω–∏.',
    'Obese III': '—É —Ç–µ–±—è –æ–∂–∏—Ä–µ–Ω–∏–µ III —Å—Ç–µ–ø–µ–Ω–∏.',
    'Obese IV': '—É —Ç–µ–±—è –æ–∂–∏—Ä–µ–Ω–∏–µ IV —Å—Ç–µ–ø–µ–Ω–∏.',
    'Obese V': '—É —Ç–µ–±—è –æ–∂–∏—Ä–µ–Ω–∏–µ V —Å—Ç–µ–ø–µ–Ω–∏.',
    'Obese VI+': '—É —Ç–µ–±—è –æ–∂–∏—Ä–µ–Ω–∏–µ VI —Å—Ç–µ–ø–µ–Ω–∏ –∏–ª–∏ –±–æ–ª—å—à–µ.',
};
const interpretNextCategory = {
    'Very severely underweight': '‚ùå',
    'Severely underweight': '¬´–æ–±—ã—á–Ω—ã–π¬ª –¥–µ—Ñ–∏—Ü–∏—Ç –≤–µ—Å–∞',
    Underweight: '–Ω–µ–æ–ø–∞—Å–Ω—ã–π –¥–µ—Ñ–∏—Ü–∏—Ç',
    Normal: '‚ùå',
    Overweight: '¬´–≤—Å–µ–≥–æ –ª–∏—à—å¬ª –∏–∑–±—ã—Ç–æ—á–Ω—ã–π –≤–µ—Å',
    'Obese I': 'I —Å—Ç–µ–ø–µ–Ω—å',
    'Obese II': 'II —Å—Ç–µ–ø–µ–Ω—å',
    'Obese III': 'II —Å—Ç–µ–ø–µ–Ω—å',
    'Obese IV': 'IV —Å—Ç–µ–ø–µ–Ω—å',
    'Obese V': 'V —Å—Ç–µ–ø–µ–Ω—å',
    'Obese VI+': '‚ùå',
};
function presentBMI(data) {
    if (data.case === 'need-user-info')
        return '–î–ª—è —Ä–∞—Å—á–µ—Ç–∞ –ò–ú–¢ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –¥–∞–Ω–Ω—ã—Ö. –£–∫–∞–∂–∏ –∏—Ö –ø—Ä–∏ –ø–æ–º–æ—â–∏ /info';
    const { bmi, healthyRange, categoryName, ideal, suggest } = data;
    return `–ò–ú–¢: ${bmi} ‚Äî ${interpretCategory[categoryName]} ${healthy()}. –ê —Ç–≤–æ–π –∏–¥–µ–∞–ª—å–Ω—ã–π –≤–µ—Å: ${ideal} –∫–≥.`;
    function healthy() {
        const [hLower, hUpper] = healthyRange;
        const range = `–æ—Ç ${hLower} –¥–æ ${hUpper} –∫–≥`;
        if (suggest.alreadyHealthy)
            return `–¢–≤–æ—è –≥—Ä–∞–Ω–∏—Ü–∞ –∑–¥–æ—Ä–æ–≤–æ–≥–æ –≤–µ—Å–∞: ${range}`;
        const { toHealthy, toNext } = suggest;
        return `–¢–µ–±–µ –Ω—É–∂–Ω–æ ${diffKg(toHealthy)} –¥–æ –∑–¥–æ—Ä–æ–≤–æ–≥–æ –≤–µ—Å–∞, –∫–æ—Ç–æ—Ä—ã–π –¥–ª—è —Ç–µ–±—è ${range}${next(toNext)}`;
    }
    function next(toNext) {
        if (toNext == null)
            return '';
        const nextCategory = interpretNextCategory[toNext.categoryName];
        return `. –ü–µ—Ä–≤—ã–º —à–∞–≥–æ–º —Ç–µ–±–µ –Ω—É–∂–Ω–æ ${diffKg(toNext.diff)} ‚Äî —Ç–æ–≥–¥–∞ —É —Ç–µ–±—è –±—É–¥–µ—Ç ${nextCategory}`;
    }
    function diffKg(to) {
        const action = to >= 0 ? '–Ω–∞–±—Ä–∞—Ç—å' : '—Å–±—Ä–æ—Å–∏—Ç—å';
        return `${action} ${Math.abs(to)} –∫–≥`;
    }
}
//# sourceMappingURL=bmiPresenter.js.map